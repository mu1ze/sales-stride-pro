// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://cfrndyryrvrrlvqfcqvn.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImNmcm5keXJ5cnZycmx2cWZjcXZuIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTY1ODU4MTIsImV4cCI6MjA3MjE2MTgxMn0.UySk_Wz0Uk-axAiNDT_6A_MI2U2dM5PKxvp0B8aZVs0";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";
import { Order } from './types';

const supabaseUrl = import.meta.env.VITE_SUPABASE_URL || SUPABASE_URL;
const supabaseKey = import.meta.env.VITE_SUPABASE_PUBLISHABLE_KEY;
export const supabase = createClient(supabaseUrl, supabaseKey);

// Fetch all orders
export async function getOrders(): Promise<Order[]> {
  const { data, error } = await supabase.from('orders').select('*');
  if (error) throw error;
  return data as Order[];
}

// Create a new order
export async function createOrder(order: Omit<Order, 'id' | 'created_at' | 'completed_at'>): Promise<Order> {
  const { data, error } = await supabase.from('orders').insert([order]).select('*').single();
  if (error) throw error;
  return data as Order;
}

// Update an order
export async function updateOrder(id: string, updates: Partial<Order>): Promise<Order> {
  const { data, error } = await supabase.from('orders').update(updates).eq('id', id).select('*').single();
  if (error) throw error;
  return data as Order;
}

// Delete an order
export async function deleteOrder(id: string): Promise<void> {
  const { error } = await supabase.from('orders').delete().eq('id', id);
  if (error) throw error;
}

// ...existing code...